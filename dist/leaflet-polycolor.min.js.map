{"version":3,"sources":["src/leaflet-polycolor.js"],"names":["L","Renderer","RendererGradient","Canvas","extend","_updatePoly","layer","options","_drawing","i","j","len2","p","prev","parts","_parts","len","length","ctx","_ctx","_layers","_leaflet_id","stroke","weight","beginPath","moveTo","x","y","lineTo","_stroke","fill","_fill","globalAlpha","fillOpacity","fillStyle","fillColor","color","fillRule","setLineDash","_dashArray","opacity","lineWidth","strokeStyle","useGradient","_getStrokeGradient","colors","lineCap","lineJoin","closePath","gradient","createLinearGradient","gradientStartRGB","gradientEndRGB","addColorStop","Polycolor","Polyline","_colorParts","initialize","latlngs","Util","setOptions","renderer","_setLatLngs","_clipPoints","bounds","_renderer","_bounds","_pxBounds","intersects","_rings","_update","_map","_updatePath","polycolor"],"mappings":"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","file":"dist/leaflet-polycolor.min.js","sourcesContent":["export default function(L) {\n  const Renderer = L.Renderer.RendererGradient = L.Canvas.extend({\n    _updatePoly: function(layer) {\n      const options = layer.options;\n\n      if (!this._drawing) return;\n\n      let i, j, len2, p, prev;\n      const parts = layer._parts;\n      const len = parts.length;\n      const ctx = this._ctx;\n\n      if (!len) return;\n\n      this._layers[layer._leaflet_id] = layer;\n\n      if (options.stroke && options.weight !== 0) {\n        for (i = 0; i < len; i++) {\n          for (j = 0, len2 = parts[i].length - 1; j < len2; j++) {\n            p = parts[i][j + 1];\n            prev = parts[i][j];\n\n            ctx.beginPath();\n\n            ctx.moveTo(prev.x, prev.y);\n            ctx.lineTo(p.x, p.y);\n\n            this._stroke(ctx, layer, prev, p, j);\n          }\n        }\n      }\n\n      if (options.fill) {\n        ctx.beginPath();\n\n        for (i = 0; i < len; i++) {\n          for (j = 0, len2 = parts[i].length - 1; j < len2; j++) {\n            p = parts[i][j + 1];\n            prev = parts[i][j];\n\n            if (j === 0)\n              ctx.moveTo(prev.x, prev.y);\n            ctx.lineTo(p.x, p.y);\n          }\n        }\n\n        this._fill(ctx, layer, prev, p, j);\n      }\n\n    },\n\n    _fill: function(ctx, layer, prev, p, j) {\n      const options = layer.options;\n\n      if (options.fill) {\n        ctx.globalAlpha = options.fillOpacity;\n        ctx.fillStyle = options.fillColor || options.color;\n\n        ctx.fill(options.fillRule || 'evenodd');\n      }\n    },\n\n    _stroke: function(ctx, layer, prev, p, j) {\n      const options = layer.options;\n\n      if (options.stroke && options.weight !== 0) {\n        if (ctx.setLineDash) {\n          ctx.setLineDash(layer.options && layer.options._dashArray || []);\n        }\n\n        ctx.globalAlpha = options.opacity;\n        ctx.lineWidth = options.weight;\n        ctx.strokeStyle = options.useGradient ? this._getStrokeGradient(ctx, layer, prev, p, j) : (options.colors[j] || options.color);\n\n        ctx.lineCap = options.lineCap;\n        ctx.lineJoin = options.lineJoin;\n\n        ctx.stroke();\n\n        ctx.closePath();\n      }\n    },\n\n    _getStrokeGradient: function(ctx, layer, prev, p, j) {\n      const options = layer.options;\n\n      // Create a gradient for each segment, pick start and end colors from colors options\n      const gradient = ctx.createLinearGradient(prev.x, prev.y, p.x, p.y);\n      const gradientStartRGB = options.colors[j] || options.color;\n      const gradientEndRGB = options.colors[j + 1] || options.color;\n\n      gradient.addColorStop(0, gradientStartRGB);\n      gradient.addColorStop(1, gradientEndRGB);\n\n      return gradient;\n    },\n  });\n\n  const Polycolor = L.Polycolor = L.Polyline.extend({\n    _colorParts: [],\n\n    options: {\n      colors: [],\n      useGradient: true,\n    },\n\n    initialize: function(latlngs, options) {\n      L.Util.setOptions(this, options);\n\n      this.options.renderer = new Renderer();\n\n      this._setLatLngs(latlngs);\n      this._colorParts = [];\n    },\n\n    // TODO add clip and smoothFactor\n    _clipPoints: function() {\n      const bounds = this._renderer._bounds;\n\n      this._parts = [];\n      this._colorParts = [];\n      if (!this._pxBounds || !this._pxBounds.intersects(bounds)) {\n        return;\n      }\n\n      this._parts = this._rings;\n      this._colorParts = this.options.colors;\n    },\n\n    _update: function() {\n      if (!this._map) return;\n\n      this._clipPoints();\n      this._updatePath();\n    }\n  });\n\n  // Factory\n  L.polycolor = function(latlngs, options) {\n    return new L.Polycolor(latlngs, options);\n  }\n\n  return Polycolor;\n}\n"]}